@page
@model AlDentev2.Pages.HatsModel
@{
    ViewData["Title"] = "Czapki";
}
<div class="container mt-5">
    <div class="row ">
        @if (!Model.Hats.Any())
        {
            <div class="col-12 mt-5 text-center">
                <p>Brak dostepnych produktów w tej kategorii</p>
            </div>
        }
        else
        {
            @foreach(var hat in Model.Hats)
            {
                <div class="col-sm-4 offset-sm-2 mt-5">
                    <div id="carousel-@hat.Id" class="carousel slide" data-bs-ride="carousel">
                        <div class="carousel-inner">
                            @if(hat.ProductImages!=null && hat.ProductImages.Any())
                            {
                                var mainImage = hat.ProductImages.FirstOrDefault(pi => pi.IsMain) ?? hat.ProductImages.OrderBy(pi => pi.DisplayOrder).FirstOrDefault();
                                var additionalImages = hat.ProductImages.Where(pi => pi != mainImage).OrderBy(pi => pi.DisplayOrder);
                                <div class="carousel-item active">
                                    <a href="/ProductDetails/@hat.Id">
                                        <img class="img-fluid" src="@(mainImage?.ImageUrl ?? hat.ImageUrl)" alt="@hat.Name" />
                                    </a>
                                </div>
                                @foreach(var image in additionalImages)
                                {
                                    <div class="carousel-item">
                                        <a href="/ProductDetails/@hat.Id">
                                            <img class="img-fluid" src="@image.ImageUrl" alt="@hat.Name" />
                                        </a>
                                        
                                    </div>
                                }
                            }
                            else if (!string.IsNullOrEmpty(hat.ImageUrl))
                            {
                                <div class="carousel-item active">
                                    <a href="/ProductDetails/@hat.Id">
                                        <img class="img-fluid" src="@hat.ImageUrl" alt="@hat.Name" />
                                    </a>
                                </div>
                            }
                            else
                            {
                                <div class="carousel-item active">
                                    <a href="/ProductDetails/@hat.Id">
                                        <img class="img-fluid" src="/images/placeholder.jpg" alt="Brak zdjęcia" />
                                    </a>
                                </div>
                            }
                            </div>
                            @if((hat.ProductImages!=null && hat.ProductImages.Count>1)
                            || (hat.ProductImages==null && !string.IsNullOrEmpty(hat.ImageUrl))){
                            <button type="button" class="carousel-control-prev" data-bs-target="#carousel-@hat.Id" data-bs-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Previous</span>
                            </button>
                            <button type="button" class="carousel-control-next" data-bs-target="#carousel-@hat.Id" data-bs-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Next</span>
                            </button>
                            }
                        </div>
                </div>
                <div class="col-md-4 text-center align-content-center">
                    <a href="/ProductDetails/@hat.Id" class="text-decoration-none text-dark">
                        <h6>@hat.Name</h6>
                    </a>
                    <p>@hat.Price.ToString("N2") PLN</p>

                    <form method="post" asp-page="/AddToCart">
                        <input type="hidden" name="ProductId" value="@hat.Id" />

                        <p>Rozmiar:</p>
                        <div class="mb-3">
                            @if (Model.AvailableSizes.ContainsKey(hat.Id))
                            {
                                foreach (var size in Model.AvailableSizes[hat.Id])
                                {
                                    var isAvailable = Model.IsSizeAvailable(hat.Id, size.Id);
                                    var stockQty = Model.GetStockQuantity(hat.Id, size.Id);
                                    <button type="button"
                                            class="btn @(isAvailable ? "btn-outline-dark" : "btn-outline-secondary disabled")"
                                            onclick="selectSize(this, @size.Id)"
                                            data-size-id="@size.Id"
                                            data-available="@isAvailable.ToString().ToLower()"
                                            title="@(isAvailable ? $"Dostępne: {stockQty} szt." : "Niedostępne")">
                                        @size.Name
                                    </button>
                                }
                                <input type="hidden" name="SizeId" id="selectedSize-@hat.Id" />
                            }
                            else
                            {
                                <p class="text-danger">Brak dostępnych rozmiarów</p>
                            }
                        </div>

                        <div class="mb-3">
                            <label for="quantity-@hat.Id" class="visually-hidden">Ilość</label>
                            <input type="number"
                                   id="quantity-@hat.Id"
                                   name="Quantity"
                                   class="form-control d-inline-block"
                                   value="1"
                                   min="1"
                                   max="10"
                                   style="width: 70px;">
                        </div>

                        <button class="btn btn-dark mt-2" type="submit" id="addToCartBtn-@hat.Id" disabled>
                            Dodaj do koszyka
                        </button>
                    </form>
                </div>
            }
        }
    </div>
</div>
@section Scripts {
    <script>
        function selectSize(button, sizeId) {
            // Pobierz wszystkie przyciski rozmiarów w tym samym formularzu
            const form = button.closest('form');
            const sizeButtons = form.querySelectorAll('button[data-size-id]');
            const hiddenInput = form.querySelector('input[name="SizeId"]');
            const addToCartBtn = form.querySelector('button[type="submit"]');

            // Usuń klasę 'active' ze wszystkich przycisków
            sizeButtons.forEach(btn => {
                btn.classList.remove('btn-dark');
                btn.classList.add('btn-outline-dark');
            });

            // Dodaj klasę 'active' do wybranego przycisku
            const isAvailable = button.getAttribute('data-available') === 'true';
            if (isAvailable) {
                button.classList.remove('btn-outline-dark');
                button.classList.add('btn-dark');

                // Ustaw wartość ukrytego pola
                hiddenInput.value = sizeId;

                // Odblokuj przycisk "Dodaj do koszyka"
                addToCartBtn.disabled = false;
            }
        }
    </script>
}